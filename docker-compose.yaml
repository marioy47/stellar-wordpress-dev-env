version: "3"

services:

  # Nginx Webserver and proxy
  http:
    image: nginx:alpine
    container_name: stellar-dev-webserver
    environment:
      WORDPRESS_REMOTE_URL: ${WORDPRESS_REMOTE_URL:-https://remote-site-media}
      WORDPRESS_CONTAINER: stellar-dev-wp
    volumes:
      - ./docker/http/nginx-templates:/etc/nginx/templates:ro
      - ./:/var/www/html
    command:
      - sh
      - -c
      - |
        envsubst '$$WORDPRESS_CONTAINER,$$WORDPRESS_REMOTE_URL' < /etc/nginx/templates/wordpress.conf > /etc/nginx/conf.d/wordpress.conf
        rm -f /etc/nginx/conf.d/default.conf
        nginx -g 'daemon off;'
    ports:
      - ${WORDPRESS_PORT:-8000}:80

  # WordPress Application
  wp:
    build:
      context: ./docker/wp/
      args:
        - WORDPRESS_VERSION=${WORDPRESS_VERSION:-fpm}
    container_name: stellar-dev-wp
    environment:
      WORDPRESS_DB_HOST: stellar-dev-db
      WORDPRESS_DB_USER: ${MYSQL_USER:-wordpress}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD:-wordpress}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE:-wordpress}
      WORDPRESS_CONFIG_EXTRA: |
        define( 'WP_DEBUG', true );
        define( 'WP_DEBUG_DISPLAY', true );
        define( 'WP_DEBUG_LOG', '/tmp/wordpress/wordpress.log' );
        define( 'WP_REDIS_HOST', 'stellar-dev-cache' );
    volumes:
      # configuration files
      - ./docker/wp/msmtprc:/etc/msmtprc
      - ./docker/wp/php-config.ini:/usr/local/etc/php/conf.d/php-config.ini
      - ./docker/wp/msmtp-mailhost-fixer.php:/var/www/html/wp-content/mu-plugins/msmtp-mailhost-fixer.php
      # Enable log access
      - ./logs/xdebug:/tmp/xdebug
      - ./logs/wordpress:/tmp/wordpress
      # WordPress files
      - ./:/var/www/html
      - ./plugins:/var/www/html/wp-content/plugins


networks:
  default:
    name: learndash-wp-proxy-network

volumes:
  db-data:
  wp-data:
  cert-data:

# vim: wrap
